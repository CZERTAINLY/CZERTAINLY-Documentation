"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[6788],{83454:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var o=t(85893),i=t(11151);const a={},s="Troubleshooting",r={id:"certificate-key/integration-guides/adfs/troubleshooting",title:"Troubleshooting",description:"Keycloak",source:"@site/docs/10-certificate-key/20-integration-guides/18-adfs/40-troubleshooting.md",sourceDirName:"10-certificate-key/20-integration-guides/18-adfs",slug:"/certificate-key/integration-guides/adfs/troubleshooting",permalink:"/docs/certificate-key/integration-guides/adfs/troubleshooting",draft:!1,unlisted:!1,editUrl:"https://github.com/3KeyCompany/CZERTAINLY-Documentation/edit/documentation/docs/10-certificate-key/20-integration-guides/18-adfs/40-troubleshooting.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configure AD FS",permalink:"/docs/certificate-key/integration-guides/adfs/configure-adfs"},next:{title:"Overview",permalink:"/docs/certificate-key/integration-guides/hashicorp-vault/overview"}},c={},l=[{value:"Keycloak",id:"keycloak",level:2},{value:"AD FS",id:"ad-fs",level:2},{value:"CZERTAINLY",id:"czertainly",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsx)(n.h2,{id:"keycloak",children:"Keycloak"}),"\n",(0,o.jsxs)(n.p,{children:["You can enable DEBUG logs in Keycloak to troubleshoot the integration with AD FS. To do so, set environment variable ",(0,o.jsx)(n.code,{children:"KC_LOG_LEVEL"})," to value ",(0,o.jsx)(n.code,{children:"INFO,org.keycloak.saml:DEBUG,org.keycloak.broker.saml:DEBUG"})," before Keycloak starts. With those settings, Keycloak will log all SAML messages which are being exchanged between Keycloak and AD FS."]}),"\n",(0,o.jsx)(n.h2,{id:"ad-fs",children:"AD FS"}),"\n",(0,o.jsxs)(n.p,{children:["Logs from AD FS can be helpful to troubleshoot the integration. You can view logs in the ",(0,o.jsx)(n.code,{children:"Event Viewer"})," under ",(0,o.jsx)(n.code,{children:"Applications and Services Logs"})," and ",(0,o.jsx)(n.code,{children:"AD FS"}),". You can also enable verbose logging in AD FS by running the following PowerShell command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-powershell",children:"Set-AdfsProperties -LogLevel Verbose\n"})}),"\n",(0,o.jsx)(n.h2,{id:"czertainly",children:"CZERTAINLY"}),"\n",(0,o.jsxs)(n.p,{children:["You can enable DEBUG logs in CZERTAINLY to troubleshoot the integration with AD FS. To do so, set environment variable ",(0,o.jsx)(n.code,{children:"KONG_LOG_LEVEL"})," to value ",(0,o.jsx)(n.code,{children:"debug"})," of the API gateway that is handling the OIDC requests. You can enable DEBUG logs using Helm chart by setting ",(0,o.jsx)(n.code,{children:"apiGateway.logging.level"})," to ",(0,o.jsx)(n.code,{children:"debug"})," and redeploying the Helm chart."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-JSON",children:'{\n  "jti": "388439a9-72a1-4eb2-be37-0e0d89d71049",\n  "auth_time": 1712665283,\n  "given_name": "John",\n  "family_name": "Doe",\n  "email": "john.doe@example.com",\n  "acr": "1",\n  "session_state": "cd740fda-dea5-4a91-8cc8-fbe4c4c957ec",\n  "roles": [\n    "admin",\n    "user",\n    "manager"\n  ],\n  "iss": "https://keycloak.example.com/realms/CZERTAINLY",\n  "aud": "kong",\n  "iat": 1712665284,\n  "azp": "kong",\n  "at_hash": "5s3DYMIPAxf5-GIwRJGdtA",\n  "sub": "eff98879-4e25-4255-abbf-b6c5d77cb6ad",\n  "sid": "cd740fda-dea5-4a91-8cc8-fbe4c4c957ec",\n  "email_verified": false,\n  "exp": 1712665584,\n  "typ": "ID",\n  "nonce": "d51bca31432cb728afe3ac0924a4bfdd",\n  "name": "John Doe",\n  "preferred_username": "example\\\\john.doe"\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>s});var o=t(67294);const i={},a=o.createContext(i);function s(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);