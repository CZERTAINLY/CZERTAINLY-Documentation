"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[5359],{25208:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var c=n(85893),r=n(11151);const i={},s="Interfaces",o={id:"certificate-key/concept-design/architecture/interfaces",title:"Interfaces",description:"The platform consists of a set of interfaces related to the platform APIs and communication with Connector.",source:"@site/docs/10-certificate-key/02-concept-design/02-architecture/03-interfaces.md",sourceDirName:"10-certificate-key/02-concept-design/02-architecture",slug:"/certificate-key/concept-design/architecture/interfaces",permalink:"/docs/certificate-key/concept-design/architecture/interfaces",draft:!1,unlisted:!1,editUrl:"https://github.com/3KeyCompany/CZERTAINLY-Documentation/edit/documentation/docs/10-certificate-key/02-concept-design/02-architecture/03-interfaces.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Core",permalink:"/docs/certificate-key/concept-design/architecture/core"},next:{title:"Connector",permalink:"/docs/certificate-key/concept-design/architecture/connector"}},a={},d=[{value:"<code>Client</code> Web Interfaces",id:"client-web-interfaces",level:2},{value:"<code>Client</code> REST API",id:"client-rest-api",level:2},{value:"<code>Connector</code> Interfaces",id:"connector-interfaces",level:2},{value:"<code>Core</code> Interfaces",id:"core-interfaces",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.h1,{id:"interfaces",children:"Interfaces"}),"\n",(0,c.jsxs)(t.p,{children:["The platform consists of a set of interfaces related to the platform APIs and communication with ",(0,c.jsx)(t.code,{children:"Connector"}),"."]}),"\n",(0,c.jsxs)(t.p,{children:["These interfaces must be generally applied when extending the platform, in case you would like to develop custom ",(0,c.jsx)(t.code,{children:"Connector"})," providing some specific functionality or implementing some proprietary protocols."]}),"\n",(0,c.jsx)(t.p,{children:"The platform consists of the following interfaces:"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:"Client Web Interfaces"}),"\n",(0,c.jsx)(t.li,{children:"Client REST API"}),"\n",(0,c.jsx)(t.li,{children:"Connector Interfaces"}),"\n",(0,c.jsx)(t.li,{children:"Core Interfaces"}),"\n"]}),"\n",(0,c.jsxs)(t.p,{children:["To know more about the list of APIs refer to ",(0,c.jsx)(t.a,{href:"https://github.com/3KeyCompany/CZERTAINLY-Interfaces",children:"Interfaces Repository"}),"."]}),"\n",(0,c.jsxs)(t.h2,{id:"client-web-interfaces",children:[(0,c.jsx)(t.code,{children:"Client"})," Web Interfaces"]}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.code,{children:"Client"})," web interfaces are graphical representation for the user in form of web applications. Currently, there are the following ",(0,c.jsx)(t.code,{children:"Client"})," web interfaces:"]}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Interface"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"Administrator"})}),(0,c.jsx)(t.td,{children:"Management of the platform and all resources and their operations. This interface also includes administrative components and administrative operations."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"Operator"})}),(0,c.jsx)(t.td,{children:"(Deprecated) Provides certificate and cryptographic key related operations."})]})]})]}),"\n",(0,c.jsxs)(t.h2,{id:"client-rest-api",children:[(0,c.jsx)(t.code,{children:"Client"})," REST API"]}),"\n",(0,c.jsx)(t.p,{children:"Platform offers REST API to communicate with the platform. REST API can be split into two major categories:"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Interface"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"Administration"})}),(0,c.jsx)(t.td,{children:"For administrative operations."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"Client Operations"})}),(0,c.jsx)(t.td,{children:"For certificate and cryptographic key related operations."})]})]})]}),"\n",(0,c.jsxs)(t.h2,{id:"connector-interfaces",children:[(0,c.jsx)(t.code,{children:"Connector"})," Interfaces"]}),"\n",(0,c.jsxs)(t.p,{children:["The ",(0,c.jsx)(t.code,{children:"Connector"})," interface implements specific technology that can be connected with the platform. Depending on the technology and use-case, the ",(0,c.jsx)(t.code,{children:"Connector"})," may be of different ",(0,c.jsx)(t.code,{children:"Types"})," and ",(0,c.jsx)(t.code,{children:"Functional Groups"}),"."]}),"\n",(0,c.jsxs)(t.p,{children:["Each ",(0,c.jsx)(t.code,{children:"Connector"})," has to implement at least the following interfaces:"]}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:"Attributes"}),"\n",(0,c.jsx)(t.li,{children:"Health"}),"\n",(0,c.jsx)(t.li,{children:"Info"}),"\n"]}),"\n",(0,c.jsxs)(t.h2,{id:"core-interfaces",children:[(0,c.jsx)(t.code,{children:"Core"})," Interfaces"]}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.code,{children:"Core"})," interfaces are used by the platform to communicate with the ",(0,c.jsx)(t.code,{children:"Connector"})," and the ",(0,c.jsx)(t.code,{children:"Client"}),"."]}),"\n",(0,c.jsxs)(t.p,{children:["You can find the description of the ",(0,c.jsx)(t.code,{children:"Core"})," interfaces in the following sections:"]}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"https://github.com/3KeyCompany/CZERTAINLY-Interfaces/tree/develop/src/main/java/com/czertainly/api/interfaces/core",children:"Core interfaces"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>s});var c=n(67294);const r={},i=c.createContext(r);function s(e){const t=c.useContext(i);return c.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),c.createElement(i.Provider,{value:t},e.children)}}}]);