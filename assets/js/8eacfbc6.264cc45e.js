"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[3963],{20480:function(n,t,e){e.r(t),e.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return a},toc:function(){return u}});var r=e(85893),o=e(11151);const i={},s="Crypto Token Configuration",a={id:"signing/qscd-integration/utimaco-cp5/cryptotoken",title:"Crypto Token Configuration",description:"CryptoServer CP5 uses a standard PKCS#11 Crypto Token for the integration with the SignServer.",source:"@site/docs/30-signing/25-qscd-integration/07-utimaco-cp5/11-cryptotoken.md",sourceDirName:"30-signing/25-qscd-integration/07-utimaco-cp5",slug:"/signing/qscd-integration/utimaco-cp5/cryptotoken",permalink:"/docs/signing/qscd-integration/utimaco-cp5/cryptotoken",draft:!1,unlisted:!1,editUrl:"https://github.com/3KeyCompany/CZERTAINLY-Documentation/edit/documentation/docs/30-signing/25-qscd-integration/07-utimaco-cp5/11-cryptotoken.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CryptoServer CP5 PKCS#11 Installation",permalink:"/docs/signing/qscd-integration/utimaco-cp5/middleware"},next:{title:"Introduction",permalink:"/docs/signing/qscd-integration/nshield-xc-cc/overview"}},c={},u=[{value:"Sample configuration",id:"sample-configuration",level:2}];function p(n){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"crypto-token-configuration",children:"Crypto Token Configuration"}),"\n",(0,r.jsxs)(t.p,{children:["CryptoServer CP5 uses a standard ",(0,r.jsx)(t.a,{href:"https://doc.primekey.com/signserver/signserver-reference/signserver-components/cryptotokens/pkcs11cryptotoken",children:"PKCS#11 Crypto Token"})," for the integration with the SignServer."]}),"\n",(0,r.jsx)(t.admonition,{type:"warning",children:(0,r.jsx)(t.p,{children:"Due to initialization and authorization of the private keys functions, private key cannot be managed through the PKCS#11 Crypto Token. The PKCS#11 Crypto Token should always be configured as a last step with existing certificate and private key authorized for signing/sealing operations."})}),"\n",(0,r.jsx)(t.h2,{id:"sample-configuration",children:"Sample configuration"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"WORKER6.CRYPTOTOKEN_IMPLEMENTATION_CLASS=org.signserver.server.cryptotokens.PKCS11CryptoToken\nWORKER6.SLOTLABELVALUE=TestSlot\nWORKER6.NAME=UtimacoCP5QSCDCryptoToken\nWORKER6.PIN=_MASKED_\nWORKER6.IMPLEMENTATION_CLASS=org.signserver.server.signers.CryptoWorker\nWORKER6.DEFAULTKEY=testkey01\nWORKER6.ATTRIBUTES=attributes(generate,CKO_PUBLIC_KEY,*) \\= {\\r\\n   CKA_TOKEN \\= false\\r\\n   CKA_ENCRYPT \\= false\\r\\n   CKA_VERIFY \\= true\\r\\n   CKA_WRAP \\= false\\r\\n}\\r\\nattributes(generate, CKO_PRIVATE_KEY,*) \\= {\\r\\n   CKA_TOKEN \\= true\\r\\n   CKA_PRIVATE \\= true\\r\\n   CKA_SENSITIVE \\= true\\r\\n   CKA_EXTRACTABLE \\= false\\r\\n   CKA_DECRYPT \\= false\\r\\n   CKA_SIGN \\= true\\r\\n   CKA_UNWRAP \\= false\\r\\n}\nWORKER6.SHAREDLIBRARYNAME=CryptoServerCP5\nWORKER6.DISABLED=FALSE\nWORKER6.TYPE=CRYPTO_WORKER\nWORKER6.SLOTLABELTYPE=SLOT_LABEL\n"})})]})}function d(n={}){const{wrapper:t}={...(0,o.a)(),...n.components};return t?(0,r.jsx)(t,{...n,children:(0,r.jsx)(p,{...n})}):p(n)}},11151:function(n,t,e){e.d(t,{Z:function(){return a},a:function(){return s}});var r=e(67294);const o={},i=r.createContext(o);function s(n){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function a(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),r.createElement(i.Provider,{value:t},n.children)}}}]);