"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[5283],{80944:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>m});var t=i(85893),r=i(11151);const s={},o="Dynamic Configuration Signer Sample Configuration",a={id:"signing/sam-integration/entrust-sam/samples/sample-dynamic-config-signer",title:"Dynamic Configuration Signer Sample Configuration",description:"The following is a sample configuration of the DynamicConfigSigner:",source:"@site/docs/30-signing/30-sam-integration/07-entrust-sam/11-samples/06-sample-dynamic-config-signer.md",sourceDirName:"30-signing/30-sam-integration/07-entrust-sam/11-samples",slug:"/signing/sam-integration/entrust-sam/samples/sample-dynamic-config-signer",permalink:"/docs/signing/sam-integration/entrust-sam/samples/sample-dynamic-config-signer",draft:!1,unlisted:!1,editUrl:"https://github.com/3KeyCompany/CZERTAINLY-Documentation/edit/documentation/docs/30-signing/30-sam-integration/07-entrust-sam/11-samples/06-sample-dynamic-config-signer.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Entrust SAM Sample OneTime Configuration",permalink:"/docs/signing/sam-integration/entrust-sam/samples/sample-onetime-configuration"},next:{title:"Introduction",permalink:"/docs/signing/sam-integration/trident-sam/overview"}},c={},m=[];function g(n){const e={code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"dynamic-configuration-signer-sample-configuration",children:"Dynamic Configuration Signer Sample Configuration"}),"\n",(0,t.jsxs)(e.p,{children:["The following is a sample configuration of the ",(0,t.jsx)(e.code,{children:"DynamicConfigSigner"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"# Type of worker\nWORKERGENID1.TYPE=PROCESSABLE\n\n# Name for other workers to reference this worker\nWORKERGENID1.NAME=EntrustDynamicConfigSigner\n\n# Implementation class and Crypto Token reference\nWORKERGENID1.IMPLEMENTATION_CLASS=com.czertainly.signserver.module.entrustsam.signer.DynamicConfigSigner\nWORKERGENID1.CRYPTOTOKEN=PKCS11CryptoToken\n# The private key of the Configuration Privileged User\nWORKERGENID1.DEFAULTKEY=cpu1\n\n# A name of a crypto token containing private key and user certificate. Will be used to authenticate crypto token to Entrust SAM.\nWORKERGENID1.OTHER_SIGNERS=EntrustClientKeyStore\n# the private key of the Operation Privileged User\nWORKERGENID1.ENTRUST_CLIENT_AUTHENTICATION_KEY_ALIAS=opu1\n\n# Entrust SAM server\nWORKERGENID1.ENTRUST_SAM_SERVER=https://213.121.187.216:10462\nWORKERGENID1.ENTRUST_TRUST_SELF_SIGNED=true\nWORKERGENID1.ENTRUST_CONNECTION_POOL_SIZE=20\n"})})]})}function u(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(g,{...n})}):g(n)}},11151:(n,e,i)=>{i.d(e,{a:()=>o});var t=i(67294);const r={},s=t.createContext(r);function o(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}}}]);