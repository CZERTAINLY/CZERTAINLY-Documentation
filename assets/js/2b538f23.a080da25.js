"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[4089],{61792:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var i=t(85893),r=t(11151);const s={},a="Configure Keycloak",o={id:"certificate-key/integration-guides/adfs/configure-keycloak",title:"Configure Keycloak",description:"We need to create a new Identity Provider in Keycloak and configure Mappers. This will allow us to authenticate users against AD FS.",source:"@site/docs/10-certificate-key/20-integration-guides/18-adfs/20-configure-keycloak.mdx",sourceDirName:"10-certificate-key/20-integration-guides/18-adfs",slug:"/certificate-key/integration-guides/adfs/configure-keycloak",permalink:"/docs/certificate-key/integration-guides/adfs/configure-keycloak",draft:!1,unlisted:!1,editUrl:"https://github.com/3KeyCompany/CZERTAINLY-Documentation/edit/documentation/docs/10-certificate-key/20-integration-guides/18-adfs/20-configure-keycloak.mdx",tags:[],version:"current",sidebarPosition:20,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/certificate-key/integration-guides/adfs/overview"},next:{title:"Configure AD FS",permalink:"/docs/certificate-key/integration-guides/adfs/configure-adfs"}},d={},l=[{value:"Mappers",id:"mappers",level:2},{value:"Attribute: firstName",id:"attribute-firstname",level:3},{value:"Attribute: lastName",id:"attribute-lastname",level:3},{value:"Attribute: email",id:"attribute-email",level:3},{value:"Attribute: groups",id:"attribute-groups",level:3},{value:"Export service provider metadata",id:"export-service-provider-metadata",level:2},{value:"JSON configuration",id:"json-configuration",level:2},{value:"Identity provider",id:"identity-provider",level:3},{value:"Mappers",id:"mappers-1",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"configure-keycloak",children:"Configure Keycloak"}),"\n",(0,i.jsx)(n.p,{children:"We need to create a new Identity Provider in Keycloak and configure Mappers. This will allow us to authenticate users against AD FS."}),"\n",(0,i.jsx)(n.p,{children:"Login to your Keycloak instance as an administrator, where you have CZERTAINLY realm configured and follow the steps below:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["From the menu, select ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Identity Providers"})})," and add new ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"SAML v2.0"})})," identity provider."]}),"\n",(0,i.jsxs)(n.li,{children:["Insert ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"alias"})})," and ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Display name"})})," of your choice. We are going to use ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"adfs-idp-alias"})})," and ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"AD FS"})})," respectively in this guide."]}),"\n",(0,i.jsxs)(n.li,{children:["Insert ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"SAML entity descriptor"})}),", which is the metadata of your AD FS. You can find it at ",(0,i.jsx)(n.code,{children:"https://adfs.example.com/FederationMetadata/2007-06/FederationMetadata.xml"}),". Replace ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"adfs.example.com"})})," with your AD FS hostname."]}),"\n",(0,i.jsxs)(n.li,{children:["Click on ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Add"})})," button to save the new Identity Provider."]}),"\n",(0,i.jsxs)(n.li,{children:["Change ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Name ID Policy Format"})})," to ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Windows Domain Qualified Name"})}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Enable ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Want AuthnRequests signed"})})," option."]}),"\n",(0,i.jsxs)(n.li,{children:["Change ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"SAML signature key name"})})," to ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"CERT_SUBJECT"})}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Change ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"First login flow override"})})," to ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"first broker login"})}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Change ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Sync mode"})})," to ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Force"})}),". This will ensure that the attribute coming from AD FS will overwrite local values in Keycloak and will be always current."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{title:"Manual import of AD FS metadata",type:"tip",children:(0,i.jsxs)(n.p,{children:["In case you are unable to provide AD FS metadata from AD FS from URL, you can import it manually into Keycloak. To do so, disable ",(0,i.jsx)(n.code,{children:"Use entity descriptor"}),", and the option ",(0,i.jsx)(n.code,{children:"Import config from file"})," will be displayed."]})}),"\n",(0,i.jsx)(n.admonition,{title:"Keycloak version",type:"warning",children:(0,i.jsx)(n.p,{children:"The configuration options may vary depending on the Keycloak version. The instructions are based on Keycloak 24."})}),"\n",(0,i.jsx)(n.h2,{id:"mappers",children:"Mappers"}),"\n",(0,i.jsx)(n.p,{children:"Mappers are used to transform the information from the SAML assertion into Keycloak user attributes. SAML Assertion is a set of attributes about the user that is sent from the Identity Provider to the Service Provider in XML format. The Service Provider can use this information to create or update the user account in its system. In our case, the Service Provider is Keycloak and the Identity Provider is AD FS."}),"\n",(0,i.jsx)(n.p,{children:"Example of SAML Assertion providing user's email address:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'...\n<AttributeStatement>\n    <Attribute Name="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress">\n        <AttributeValue>some.user@example.com</AttributeValue>\n    </Attribute>\n...\n'})}),"\n",(0,i.jsx)(n.p,{children:"The configuration of Mappers depends on your AD FS configuration. The following is a typical configuration to map the user's first name, last name, email, and groups from AD FS to Keycloak."}),"\n",(0,i.jsxs)(n.p,{children:["To create Mappers, go to the Identity Provider configuration and switch to the Mappers tab. Click the ",(0,i.jsx)(n.code,{children:"Add mapper"})," button and define the mappers as shown below:"]}),"\n",(0,i.jsx)(n.h3,{id:"attribute-firstname",children:"Attribute: firstName"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Name: ",(0,i.jsx)(n.strong,{children:"Attribute: firstName"})]}),"\n",(0,i.jsxs)(n.li,{children:["Sync mode override: ",(0,i.jsx)(n.strong,{children:"Inherit"})]}),"\n",(0,i.jsxs)(n.li,{children:["Mapper type: ",(0,i.jsx)(n.strong,{children:"Attribute Importer"})]}),"\n",(0,i.jsxs)(n.li,{children:["Attribute Name: ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname"})})]}),"\n",(0,i.jsxs)(n.li,{children:["Friendly Name: ",(0,i.jsx)(n.em,{children:"keep empty"})]}),"\n",(0,i.jsxs)(n.li,{children:["Name Format: ",(0,i.jsx)(n.strong,{children:"ATTRIBUTE_FORMAT_BASIC"})]}),"\n",(0,i.jsxs)(n.li,{children:["User Attribute Name: ",(0,i.jsx)(n.strong,{children:"firstName"})]}),"\n"]}),"\n",(0,i.jsx)("center",{children:(0,i.jsx)("div",{style:{width:"80%"},children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Keycloak mapper First Name",src:t(39196).Z+"",width:"2666",height:"2026"})})})}),"\n",(0,i.jsx)(n.h3,{id:"attribute-lastname",children:"Attribute: lastName"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Name: ",(0,i.jsx)(n.strong,{children:"Attribute: lastName"})]}),"\n",(0,i.jsxs)(n.li,{children:["Sync mode override: ",(0,i.jsx)(n.strong,{children:"Inherit"})]}),"\n",(0,i.jsxs)(n.li,{children:["Mapper type: ",(0,i.jsx)(n.strong,{children:"Attribute Importer"})]}),"\n",(0,i.jsxs)(n.li,{children:["Attribute Name: ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname"})})]}),"\n",(0,i.jsxs)(n.li,{children:["Friendly Name: ",(0,i.jsx)(n.em,{children:"keep empty"})]}),"\n",(0,i.jsxs)(n.li,{children:["Name Format: ",(0,i.jsx)(n.strong,{children:"ATTRIBUTE_FORMAT_BASIC"})]}),"\n",(0,i.jsxs)(n.li,{children:["User Attribute Name: ",(0,i.jsx)(n.strong,{children:"lastName"})]}),"\n"]}),"\n",(0,i.jsx)("center",{children:(0,i.jsx)("div",{style:{width:"80%"},children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Keycloak mapper Last Name",src:t(56462).Z+"",width:"2666",height:"2026"})})})}),"\n",(0,i.jsx)(n.h3,{id:"attribute-email",children:"Attribute: email"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Name: ",(0,i.jsx)(n.strong,{children:"Attribute: email"})]}),"\n",(0,i.jsxs)(n.li,{children:["Sync mode override: ",(0,i.jsx)(n.strong,{children:"Inherit"})]}),"\n",(0,i.jsxs)(n.li,{children:["Mapper type: ",(0,i.jsx)(n.strong,{children:"Attribute Importer"})]}),"\n",(0,i.jsxs)(n.li,{children:["Attribute Name: ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"})})]}),"\n",(0,i.jsxs)(n.li,{children:["Friendly Name: ",(0,i.jsx)(n.em,{children:"keep empty"})]}),"\n",(0,i.jsxs)(n.li,{children:["Name Format: ",(0,i.jsx)(n.strong,{children:"ATTRIBUTE_FORMAT_BASIC"})]}),"\n",(0,i.jsxs)(n.li,{children:["User Attribute Name: ",(0,i.jsx)(n.strong,{children:"email"})]}),"\n"]}),"\n",(0,i.jsx)("center",{children:(0,i.jsx)("div",{style:{width:"80%"},children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Keycloak mapper Email",src:t(38076).Z+"",width:"2666",height:"2026"})})})}),"\n",(0,i.jsx)(n.h3,{id:"attribute-groups",children:"Attribute: groups"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Name: ",(0,i.jsx)(n.strong,{children:"Attribute: groups"})]}),"\n",(0,i.jsxs)(n.li,{children:["Sync mode override: ",(0,i.jsx)(n.strong,{children:"Inherit"})]}),"\n",(0,i.jsxs)(n.li,{children:["Mapper type: ",(0,i.jsx)(n.strong,{children:"Attribute Importer"})]}),"\n",(0,i.jsxs)(n.li,{children:["Attribute Name: ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"http://schemas.xmlsoap.org/claims/Group"})})]}),"\n",(0,i.jsxs)(n.li,{children:["Friendly Name: ",(0,i.jsx)(n.em,{children:"keep empty"})]}),"\n",(0,i.jsxs)(n.li,{children:["Name Format: ",(0,i.jsx)(n.strong,{children:"ATTRIBUTE_FORMAT_BASIC"})]}),"\n",(0,i.jsxs)(n.li,{children:["User Attribute Name: ",(0,i.jsx)(n.strong,{children:"groups"})]}),"\n"]}),"\n",(0,i.jsx)("center",{children:(0,i.jsx)("div",{style:{width:"80%"},children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Keycloak mapper Groups",src:t(61581).Z+"",width:"2666",height:"2026"})})})}),"\n",(0,i.jsx)(n.h2,{id:"export-service-provider-metadata",children:"Export service provider metadata"}),"\n",(0,i.jsx)(n.p,{children:"After you have configured the Identity Provider and Mappers, you need to export the SAML 2.0 service provider metadata. This metadata will be used to configure the AD FS."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Go to the Identity Provider configuration and switch to the ",(0,i.jsx)(n.code,{children:"Settings"})," tab."]}),"\n",(0,i.jsxs)(n.li,{children:["Click on the link ",(0,i.jsx)(n.code,{children:"SAML 2.0 Service Provider Metadata"})," to download the metadata file."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The metadata file contains the information about the Identity Provider, including the public key used to sign the SAML assertions."}),"\n",(0,i.jsx)("center",{children:(0,i.jsx)("div",{style:{width:"80%"},children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Keycloak mapper Groups",src:t(66941).Z+"",width:"2172",height:"1560"})})})}),"\n",(0,i.jsx)(n.admonition,{title:"Metadata validation",type:"tip",children:(0,i.jsxs)(n.p,{children:["Before you proceed with the AD FS configuration, validate the metadata file to ensure that it contains the correct information. You can use online tools like ",(0,i.jsx)(n.a,{href:"https://www.samltool.com/validate_xml.php",children:"SAML Metadata Validator"})," to validate the metadata file. It should contain the correct entity ID, public key, and attribute mappings."]})}),"\n",(0,i.jsx)(n.h2,{id:"json-configuration",children:"JSON configuration"}),"\n",(0,i.jsxs)(n.p,{children:["The following JSON configuration can be used to automate the configuration of the Identity Provider and Mappers in Keycloak. You can use the ",(0,i.jsx)(n.a,{href:"https://www.keycloak.org/docs-api/24.0.1/rest-api/index.html#_identity_providers",children:"Keycloak Admin REST API"})," to import this configuration."]}),"\n",(0,i.jsx)(n.h3,{id:"identity-provider",children:"Identity provider"}),"\n",(0,i.jsx)(n.p,{children:"The following JSON configuration can be used to create the Identity Provider in Keycloak. Change the values according to your AD FS configuration."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "alias": "adfs-idp-alias",\n  "displayName": "AD FS",\n  "providerId": "saml",\n  "enabled": true,\n  "updateProfileFirstLoginMode": "on",\n  "trustEmail": false,\n  "storeToken": false,\n  "addReadTokenRoleOnCreate": false,\n  "authenticateByDefault": false,\n  "linkOnly": false,\n  "firstBrokerLoginFlowAlias": "first broker login",\n  "config": {\n    "postBindingLogout": "true",\n    "postBindingResponse": "true",\n    "singleLogoutServiceUrl": "https://adfs.example.com/adfs/ls/",\n    "backchannelSupported": "false",\n    "xmlSigKeyInfoKeyNameTransformer": "CERT_SUBJECT",\n    "loginHint": "false",\n    "allowCreate": "true",\n    "authnContextComparisonType": "exact",\n    "syncMode": "FORCE",\n    "singleSignOnServiceUrl": "https://adfs.example.com/adfs/ls/",\n    "wantAuthnRequestsSigned": "true",\n    "allowedClockSkew": "0",\n    "encryptionPublicKey": "MIIC5jCCAc6...",\n    "validateSignature": "false",\n    "hideOnLoginPage": "false",\n    "signingCertificate": "MIIC4DCC...",\n    "nameIDPolicyFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",\n    "entityId": "https://keycloak.example.com/realms/CZERTAINLY",\n    "signSpMetadata": "false",\n    "signatureAlgorithm": "RSA_SHA256",\n    "wantAssertionsEncrypted": "false",\n    "useJwksUrl": "true",\n    "sendClientIdOnLogout": "false",\n    "wantAssertionsSigned": "false",\n    "sendIdTokenOnLogout": "true",\n    "postBindingAuthnRequest": "true",\n    "forceAuthn": "false",\n    "attributeConsumingServiceIndex": "0",\n    "addExtensionsElementWithKeyInfo": "false",\n    "principalType": "SUBJECT"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"mappers-1",children:"Mappers"}),"\n",(0,i.jsx)(n.p,{children:"The following JSON configuration can be used to create the Mappers in Keycloak. Change the values according to your AD FS configuration."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Attribute: firstName",\n  "identityProviderAlias": "adfs-idp-alias",\n  "identityProviderMapper": "saml-user-attribute-idp-mapper",\n  "config": {\n    "syncMode": "INHERIT",\n    "user.attribute": "firstName",\n    "attribute.name.format": "ATTRIBUTE_FORMAT_BASIC",\n    "attribute.name": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Attribute: lastName",\n  "identityProviderAlias": "adfs-idp-alias",\n  "identityProviderMapper": "saml-user-attribute-idp-mapper",\n  "config": {\n    "syncMode": "INHERIT",\n    "user.attribute": "lastName",\n    "attribute.name.format": "ATTRIBUTE_FORMAT_BASIC",\n    "attribute.name": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Attribute: email",\n  "identityProviderAlias": "adfs-idp-alias",\n  "identityProviderMapper": "saml-user-attribute-idp-mapper",\n  "config": {\n    "syncMode": "INHERIT",\n    "user.attribute": "email",\n    "attribute.name.format": "ATTRIBUTE_FORMAT_BASIC",\n    "attribute.name": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Attribute: groups",\n  "identityProviderAlias": "adfs-idp-alias",\n  "identityProviderMapper": "saml-user-attribute-idp-mapper",\n  "config": {\n    "syncMode": "INHERIT",\n    "user.attribute": "groups",\n    "attribute.name.format": "ATTRIBUTE_FORMAT_BASIC",\n    "attribute.name": "http://schemas.xmlsoap.org/claims/Group"\n  }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},66941:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/keycloak-saml-metadata-1be509c2c2109ea6b16f975ee8f61d20.png"},38076:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/mapper-keycloak-email-58323cfa0bff7d5a6264c56f8c983162.png"},39196:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/mapper-keycloak-firstname-b60cd27d5de78ebbc65566ab978f7aad.png"},61581:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/mapper-keycloak-groups-c3fd0d2f870626771587042a0eb14a2a.png"},56462:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/mapper-keycloak-lastname-3f1fda75c2aa6ca7e6a41df7fb22c7ac.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var i=t(67294);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);