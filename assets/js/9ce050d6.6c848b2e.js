"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[6987],{72643:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=t(85893),s=t(11151);const r={},a="WinRM Configuration",o={id:"certificate-key/integration-guides/adcs/winrm-configuration",title:"WinRM Configuration",description:"WinRM is a Microsoft implementation of the WS-Management Protocol, which is a standard Simple Object Access Protocol (SOAP)-based, firewall-friendly protocol that allows interoperation between hardware and operating systems from different vendors.",source:"@site/docs/10-certificate-key/20-integration-guides/14-adcs/05-winrm-configuration.md",sourceDirName:"10-certificate-key/20-integration-guides/14-adcs",slug:"/certificate-key/integration-guides/adcs/winrm-configuration",permalink:"/docs/certificate-key/integration-guides/adcs/winrm-configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/3KeyCompany/CZERTAINLY-Documentation/edit/documentation/docs/10-certificate-key/20-integration-guides/14-adcs/05-winrm-configuration.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Install PSPKI Module",permalink:"/docs/certificate-key/integration-guides/adcs/install-pspki"},next:{title:"SSH Configuration",permalink:"/docs/certificate-key/integration-guides/adcs/ssh-configuration"}},c={},l=[{value:"WinRM authentication",id:"winrm-authentication",level:2},{value:"WinRM encryption",id:"winrm-encryption",level:2},{value:"WinRM configuration",id:"winrm-configuration-1",level:2},{value:"CredSSP configuration",id:"credssp-configuration",level:2},{value:"Delegate credentials",id:"delegate-credentials",level:3},{value:"Limitations",id:"limitations",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"winrm-configuration",children:"WinRM Configuration"}),"\n",(0,i.jsx)(n.p,{children:"WinRM is a Microsoft implementation of the WS-Management Protocol, which is a standard Simple Object Access Protocol (SOAP)-based, firewall-friendly protocol that allows interoperation between hardware and operating systems from different vendors."}),"\n",(0,i.jsx)(n.p,{children:"It is used to facilitate client-less integration with Microsoft ADCS."}),"\n",(0,i.jsx)(n.h2,{id:"winrm-authentication",children:"WinRM authentication"}),"\n",(0,i.jsx)(n.p,{children:"Windows Remote Management maintains security for communication between computers by supporting several standard methods of authentication and message encryption."}),"\n",(0,i.jsxs)(n.p,{children:["The following table lists the ",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-gb/windows/win32/winrm/authentication-for-remote-connections",children:"authentication methods"})," that are supported by WinRM:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Authentication Method"}),(0,i.jsx)(n.th,{children:"Local Accounts"}),(0,i.jsx)(n.th,{children:"Active Directory Accounts"}),(0,i.jsx)(n.th,{children:"Credential Delegation"}),(0,i.jsx)(n.th,{children:"HTTP Encryption"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Basic"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--success",children:"Yes"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--danger",children:"No"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--danger",children:"No"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--danger",children:"No"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"NTLM"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--success",children:"Yes"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--success",children:"Yes"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--danger",children:"No"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--danger",children:"No"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Kerberos"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--danger",children:"No"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--success",children:"Yes"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--success",children:"Yes"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--success",children:"Yes"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"CredSSP"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--success",children:"Yes"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--success",children:"Yes"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--success",children:"Yes"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--success",children:"Yes"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Certificate"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--success",children:"Yes"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--danger",children:"No"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--danger",children:"No"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)("span",{class:"badge badge--danger",children:"No"})})]})]})]}),"\n",(0,i.jsx)(n.admonition,{title:"Access delegation",type:"warning",children:(0,i.jsx)(n.p,{children:"Enterprise ADCS is using multiple stores for its configuration, therefore for successful integration it is usually needed to have access to the ADCS service and Active Directory containers on Domain Controllers that host for instance the AD Certificate Templates. For security reasons, Windows Remote Management allows access delegation only for Kerberos and CredSSP authentication mechanisms."})}),"\n",(0,i.jsx)(n.h2,{id:"winrm-encryption",children:"WinRM encryption"}),"\n",(0,i.jsx)(n.p,{children:"By default, WinRM will fail to work when running over an unencrypted channel. Using WinRM with TLS is the recommended option as it works with all authentication options, but requires a certificate to be created and used on the WinRM listener."}),"\n",(0,i.jsxs)(n.p,{children:["The certificate can be created using the ",(0,i.jsx)(n.code,{children:"New-SelfSignedCertificate"})," cmdlet, or by using the ",(0,i.jsx)(n.code,{children:"certreq"})," command to create a certificate request and then submitting it to a Certificate Authority (CA). If in a domain environment, ADCS can create a certificate for the host that is issued by the domain itself."]}),"\n",(0,i.jsxs)(n.p,{children:["If using HTTPS is not an option, then WinRM can be used with encrypted payload when the authentication option is ",(0,i.jsx)(n.code,{children:"NTLM"}),", ",(0,i.jsx)(n.code,{children:"Kerberos"})," or ",(0,i.jsx)(n.code,{children:"CredSSP"}),". The message-level encryption is not used when running over HTTPS because the encryption uses the more secure TLS protocol instead."]}),"\n",(0,i.jsx)(n.h2,{id:"winrm-configuration-1",children:"WinRM configuration"}),"\n",(0,i.jsx)(n.p,{children:"To configure Windows Remote Management (WinRM), run the following command from an elevated PowerShell console:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"winrm quickconfig\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Check that the WinRM Service is listening on port ",(0,i.jsx)(n.code,{children:"5985"})," by running the following command from an elevated PowerShell console:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"winrm e winrm/config/listener\n\nListener\n    Address = *\n    Transport = HTTP\n    Port = 5985\n    Hostname\n    Enabled = true\n    URLPrefix = wsman\n    CertificateThumbprint\n    ListeningOn = ..., ::1\n\nListener\n    Address = *\n    Transport = HTTPS\n    Port = 5986\n    Hostname = test.example.com\n    Enabled = true\n    URLPrefix = wsman\n    CertificateThumbprint = 4feb511be2cdb7ef1a58fdd4be0a56e2e17450a3\n    ListeningOn = ..., ::1\n"})}),"\n",(0,i.jsx)(n.p,{children:"Validate the default configuration of WinRM service by running the following command from the elevated PowerShell console:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"winrm get winrm/config\n\nConfig\n    MaxEnvelopeSizekb = 500\n    MaxTimeoutms = 60000\n    MaxBatchItems = 32000\n    MaxProviderRequests = 4294967295\n    Client\n        NetworkDelayms = 5000\n        URLPrefix = wsman\n        AllowUnencrypted = true\n        Auth\n            Basic = true\n            Digest = true\n            Kerberos = true\n            Negotiate = true\n            Certificate = true\n            CredSSP = false\n        DefaultPorts\n            HTTP = 5985\n            HTTPS = 5986\n        TrustedHosts\n    Service\n        RootSDDL = O:NSG:BAD:P(A;;GXGR;;;S-1-5-21-3820024857-2695711099-450958038-1618)(A;;GA;;;DA)(A;;GA;;;BA)(A;;GAGR;;;RM)(A;;GR;;;IU)S:P(AU;FA;GA;;;WD)(AU;SA;GXGW;;;WD)\n        MaxConcurrentOperations = 4294967295\n        MaxConcurrentOperationsPerUser = 1500\n        EnumerationTimeoutms = 240000\n        MaxConnections = 300\n        MaxPacketRetrievalTimeSeconds = 120\n        AllowUnencrypted = true\n        Auth\n            Basic = true\n            Kerberos = true\n            Negotiate = true\n            Certificate = false\n            CredSSP = true\n            CbtHardeningLevel = Relaxed\n        DefaultPorts\n            HTTP = 5985\n            HTTPS = 5986\n        IPv4Filter = *\n        IPv6Filter = *\n        EnableCompatibilityHttpListener = false\n        EnableCompatibilityHttpsListener = false\n        CertificateThumbprint = 4feb511be2cdb7ef1a58fdd4be0a56e2e17450a3\n        AllowRemoteAccess = true\n    Winrs\n        AllowRemoteShellAccess = true\n        IdleTimeout = 7200000\n        MaxConcurrentUsers = 2147483647\n        MaxShellRunTime = 2147483647\n        MaxProcessesPerShell = 2147483647\n        MaxMemoryPerShellMB = 2147483647\n        MaxShellsPerUser = 2147483647\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Under the service configuration, negotiation authentication needs to be enabled. Check the output of the previous command to verify that ",(0,i.jsx)(n.code,{children:"Negotiate = true"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"credssp-configuration",children:"CredSSP configuration"}),"\n",(0,i.jsx)(n.p,{children:"Enable CredSSP authentication on the server (that CZERTAINLY is going to connect to) by running the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"Enable-WSManCredSSP -Role Server\n"})}),"\n",(0,i.jsx)(n.p,{children:"Validate the default configuration of WinRM service by running the following command from the elevated PowerShell console:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"winrm get winrm/config\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Check the output of the previous command to verify that under WinRM service (not client) ",(0,i.jsx)(n.code,{children:"CredSSP = true"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["By default, the WinRM service will create a self-signed certificate that is used for CredSSP security (message encryption and signing). ",(0,i.jsx)(n.strong,{children:"However, if Server Authentication certificate is present in Computer Certification store, it will try to use it instead."})]}),"\n",(0,i.jsx)(n.p,{children:"Check the certificate thumbprint by running the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"winrm get winrm/config/service\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In case a certificate was selected from the computer store you will see the Certificate Thumbprint in the WinRM service configuration ",(0,i.jsx)(n.code,{children:"CertificateThumbprint"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The account that is running Windows Remote Management service (Network Service by default) must have access to the private key of the certificate.\nThis is configured on the server. Locate the certificate with the thumbprint configured under ",(0,i.jsx)(n.code,{children:"winrm service"})," (previous step), and configure account to have at least ",(0,i.jsx)(n.code,{children:"Read"})," access for the private key. (select All Tasks and Manage Private Keys in the Manager)."]}),"\n",(0,i.jsx)(n.h3,{id:"delegate-credentials",children:"Delegate credentials"}),"\n",(0,i.jsx)(n.p,{children:"Enabling CredSSP account delegation on a Windows client involves configuring Group Policy or Registry Items settings."}),"\n",(0,i.jsx)(n.p,{children:"Using Group Policy Editor, navigate to Computer Configuration, Administrative Templates, System and Credentials Delegation. Enable Allow delegating fresh credentials and allow delegating fresh credentials with NTLM-only server authentication. In the options add your servers to the list or use an asterisk (*) to allow for all connections."}),"\n",(0,i.jsx)(n.p,{children:"You can use PowerShell to automate these changes:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"New-Item `\n  -Path HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\CredentialsDelegation `\n  -Name AllowFreshCredentialsWhenNTLMOnly `\n  -Force\n \nNew-ItemProperty `\n  -Path HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\CredentialsDelegation\\AllowFreshCredentialsWhenNTLMOnly `\n  -Name 1 `\n  -Value * `\n  -PropertyType String\n \nNew-Item `\n  -Path HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\CredentialsDelegation `\n  -Name AllowFreshCredentials `\n  -Force\n \nNew-ItemProperty `\n  -Path HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\CredentialsDelegation\\AllowFreshCredentials `\n  -Name 1 `\n  -Value * `\n  -PropertyType String\n\n# Update Group Policy settings to apply changes\ngpupdate /force\n"})}),"\n",(0,i.jsx)(n.p,{children:'Make sure to replace "Server1", "Server2" with the actual names of your servers.'}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"Modifying the registry and Group Policy settings should be done with caution. Ensure that you have the necessary permissions to make these changes. Also, running these commands may require elevated privileges (Run PowerShell as Administrator). Additionally, changes to Group Policy may not take effect immediately, and you might need to log out or restart your computer for the settings to apply."})}),"\n",(0,i.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,i.jsx)(n.p,{children:"There are some limitations to the WinRM integration to manage ADCS:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Credentials are delegated for only ",(0,i.jsx)(n.code,{children:"Kerberos"})," and ",(0,i.jsx)(n.code,{children:"CredSSP"})," authentication method."]}),"\n",(0,i.jsx)(n.li,{children:"Commands under WinRM are done under a non-interactive session, which can prevent certain commands or executables from running to manage ADCS."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var i=t(67294);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);