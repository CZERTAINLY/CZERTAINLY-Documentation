"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[7203],{19824:(e,r,n)=>{n.r(r),n.d(r,{GenTable:()=>h,assets:()=>d,contentTitle:()=>a,data:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var t=n(85893),i=n(11151),s=n(67294);const o={},a="OneTime Crypto Worker",c={id:"signing/sam-integration/entrust-sam/crypto-workers/onetime-crypto-worker",title:"OneTime Crypto Worker",description:"EntrustSAMOneTimeCryptoWorker authenticates to the Entrust SAM using the certificate and key pair provided by any implementation of the Crypto Token. The Signer referencing the EntrustSAMOneTimeCryptoWorker will be able to sign documents or data using the following process:",source:"@site/docs/30-signing/30-sam-integration/07-entrust-sam/05-crypto-workers/04-onetime-crypto-worker.mdx",sourceDirName:"30-signing/30-sam-integration/07-entrust-sam/05-crypto-workers",slug:"/signing/sam-integration/entrust-sam/crypto-workers/onetime-crypto-worker",permalink:"/docs/signing/sam-integration/entrust-sam/crypto-workers/onetime-crypto-worker",draft:!1,unlisted:!1,editUrl:"https://github.com/3KeyCompany/CZERTAINLY-Documentation/edit/documentation/docs/30-signing/30-sam-integration/07-entrust-sam/05-crypto-workers/04-onetime-crypto-worker.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Basic Crypto Worker",permalink:"/docs/signing/sam-integration/entrust-sam/crypto-workers/basic-crypto-worker"},next:{title:"Signing with Onetime Crypto Worker",permalink:"/docs/signing/sam-integration/entrust-sam/crypto-workers/signing-with-onetime-crypto-worker"}},d={},l=[{property:"CRYPTOTOKEN",description:(0,t.jsxs)(t.Fragment,{children:["Name of the underlying source of the ",(0,t.jsx)("b",{children:"EntrustSAMCryptoToken"}),". Refer to the implementation of the Entrust SAM Crypto Token for more information."]}),default:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--secondary",children:"NONE"})}),mandatory:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--success",children:"YES"})})},{property:"OTHER_SIGNERS",description:(0,t.jsx)(t.Fragment,{children:"Sets the reference to the Crypto Token containing the key that should be used to authenticate communication with the certification authority, if needed. Only one value should be specified for this attribute. In case it contains multiple comma separated references to Crypto Token, the first one is taken."}),default:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--secondary",children:"NONE"})}),mandatory:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--success",children:"YES"})})},{property:"KEYALIAS_PREFIX",description:(0,t.jsx)(t.Fragment,{children:"Prefix that is used to generate the key alias for the key pair."}),default:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--secondary",children:"onetime-"})}),mandatory:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--danger",children:"NO"})})},{property:"KEYGEN_ALGORITHM",description:(0,t.jsxs)(t.Fragment,{children:["Algorithm to use for generating the key pair. The following algorithms are supported:",(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:"RSA"}),(0,t.jsx)("li",{children:"ECDSA"})]})]}),default:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--secondary",children:"NONE"})}),mandatory:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--success",children:"YES"})})},{property:"KEYGEN_SPECIFICATION",description:(0,t.jsxs)(t.Fragment,{children:["Specification of the key for generating the key pair.",(0,t.jsx)("br",{}),"The following values are supported:",(0,t.jsxs)("table",{children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:"RSA"}),(0,t.jsx)("th",{children:"ECDSA"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:"2048"}),(0,t.jsx)("li",{children:"4096"})]})}),(0,t.jsx)("td",{children:(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:"secp256r1"}),(0,t.jsx)("li",{children:"prime256v1"}),(0,t.jsx)("li",{children:"secp384r1"}),(0,t.jsx)("li",{children:"prime384v1"}),(0,t.jsx)("li",{children:"secp521r1"}),(0,t.jsx)("li",{children:"prime521v1"})]})})]})]})]}),default:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--secondary",children:"NONE"})}),mandatory:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--success",children:"YES"})})},{property:"CA_CONNECTOR_IMPLEMENTATION_CLASS",description:(0,t.jsx)(t.Fragment,{children:"Implementation class of the CA Connector to be used to request the certificate for user."}),default:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--secondary",children:"NONE"})}),mandatory:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--success",children:"YES"})})}],h=({data:e})=>{const r={b:"b",td:"td",tr:"tr",...(0,i.a)()};return(0,t.jsx)(s.Fragment,{children:e.map(((e,n)=>(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.b,{children:e.property})}),(0,t.jsx)(r.td,{children:e.description}),(0,t.jsx)(r.td,{children:e.default}),(0,t.jsx)(r.td,{children:e.mandatory})]},n)))})},p=[];function m(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"onetime-crypto-worker",children:"OneTime Crypto Worker"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"EntrustSAMOneTimeCryptoWorker"})," authenticates to the Entrust SAM using the certificate and key pair provided by any implementation of the Crypto Token. The ",(0,t.jsx)(r.code,{children:"Signer"})," referencing the ",(0,t.jsx)(r.code,{children:"EntrustSAMOneTimeCryptoWorker"})," will be able to sign documents or data using the following process:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"generate a new key pair based on the specified algorithm"}),"\n",(0,t.jsx)(r.li,{children:"assign the user to the generate key pair"}),"\n",(0,t.jsx)(r.li,{children:"generate a proof of possession for the user and associated key pair"}),"\n",(0,t.jsx)(r.li,{children:"request the certificate from certification authority"}),"\n",(0,t.jsx)(r.li,{children:"sign the document or data using the certificate and key pair"}),"\n",(0,t.jsx)(r.li,{children:"unassign the user from the key pair"}),"\n",(0,t.jsx)(r.li,{children:"destroy the key pair"}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["The implementation class of the ",(0,t.jsx)(r.code,{children:"EntrustSAMOneTimeCryptoWorker"})," is:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"IMPLEMENTATION_CLASS=com.czertainly.signserver.module.sam.onetime.entrust.EntrustSAMOneTimeCryptoWorker\n"})}),"\n",(0,t.jsx)(r.admonition,{type:"warning",children:(0,t.jsxs)(r.p,{children:["This implementation requires the SignServer Enterprise Edition version 5.5.0 and higher to access the crypto instances from other ",(0,t.jsx)(r.code,{children:"Workers"}),"."]})}),"\n",(0,t.jsx)(r.admonition,{type:"info",children:(0,t.jsxs)(r.p,{children:["For a sample configuration of the Entrust SAM One Time Crypto Token, see ",(0,t.jsx)(r.a,{href:"../samples/sample-onetime-configuration",children:"OneTime Sample Configuration"}),"."]})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"EntrustSAMOneTimeCryptoWorker"})," will check the following configuration properties."]}),"\n","\n","\n",(0,t.jsxs)("table",{children:[(0,t.jsx)("th",{children:"Property"}),(0,t.jsx)("th",{children:"Description"}),(0,t.jsx)("th",{children:"Default Value"}),(0,t.jsx)("th",{children:"Mandatory"}),(0,t.jsx)("tbody",{children:(0,t.jsx)(h,{data:l})})]})]})}function g(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},11151:(e,r,n)=>{n.d(r,{a:()=>o});var t=n(67294);const i={},s=t.createContext(i);function o(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}}}]);