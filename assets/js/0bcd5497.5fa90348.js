"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[2463],{9135:(e,n,r)=>{r.r(n),r.d(n,{GenTable:()=>h,assets:()=>c,contentTitle:()=>d,data:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>g});var t=r(74848),s=r(28453),a=r(96540);const i={},d="Internal SAD Provider",o={id:"signing/sam-integration/entrust-sam/sad-providers/internal",title:"Internal SAD Provider",description:"The implementation class of the Internal SAD Provider is:",source:"@site/docs/30-signing/30-sam-integration/07-entrust-sam/07-sad-providers/07-internal.mdx",sourceDirName:"30-signing/30-sam-integration/07-entrust-sam/07-sad-providers",slug:"/signing/sam-integration/entrust-sam/sad-providers/internal",permalink:"/docs/signing/sam-integration/entrust-sam/sad-providers/internal",draft:!1,unlisted:!1,editUrl:"https://github.com/3KeyCompany/CZERTAINLY-Documentation/edit/documentation/docs/30-signing/30-sam-integration/07-entrust-sam/07-sad-providers/07-internal.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Metadata SAD Provider",permalink:"/docs/signing/sam-integration/entrust-sam/sad-providers/metadata"},next:{title:"Dynamic Configuration Signer",permalink:"/docs/signing/sam-integration/entrust-sam/dynamic-config-signer-properties"}},c={},l=[{property:"OTHER_SIGNERS",description:(0,t.jsx)(t.Fragment,{children:"Sets the reference to the Crypto Token containing the key that is used to signed the SAD. The value can be comma separated list of Crypto Token names."}),default:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--secondary",children:"NONE"})}),mandatory:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--success",children:"YES"})})},{property:"SAD_PROVIDER_KEYSTORE_INDEX",description:(0,t.jsxs)(t.Fragment,{children:["Index of the Crypto Token that is configured in ",(0,t.jsx)("b",{children:"OTHER_SIGNERS"})," property. Index starts from 0."]}),default:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--secondary",children:"NONE"})}),mandatory:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--success",children:"YES"})})},{property:"SAD_PROVIDER_KEYSTORE_ALIAS",description:(0,t.jsx)(t.Fragment,{children:"Alias of the private key stored in the keystore referenced by the Crypto Token."}),default:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--secondary",children:"NONE"})}),mandatory:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--success",children:"YES"})})},{property:"SAD_PROVIDER_SIGNING_ALGORITHM",description:(0,t.jsxs)(t.Fragment,{children:["Algorithm used to generate the digital signature of the SAD according to the RFC 7518. Supported values: ",(0,t.jsx)("b",{children:"RS256"}),", ",(0,t.jsx)("b",{children:"RS384"})," and ",(0,t.jsx)("b",{children:"RS512"}),"."]}),default:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--secondary",children:"RS512"})}),mandatory:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--danger",children:"NO"})})},{property:"SAD_PROVIDER_LOA",description:(0,t.jsxs)(t.Fragment,{children:["Level of assurance with which the Signer user specified in the sub field was authenticated. Values supported: ",(0,t.jsx)("b",{children:"LOW"}),", ",(0,t.jsx)("b",{children:"MEDIUM"}),",",(0,t.jsx)("b",{children:"SUBSTANTIAL"})," and ",(0,t.jsx)("b",{children:"HIGH"}),"."]}),default:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--secondary",children:"HIGH"})}),mandatory:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--danger",children:"NO"})})},{property:"SAD_PROVIDER_IAT_TIME_GAP",description:(0,t.jsxs)(t.Fragment,{children:["Number of seconds that should be deducted from the current time to set the ",(0,t.jsx)("b",{children:"iat"})," claim in the SAD. The value should be a positive integer."]}),default:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--secondary",children:"0"})}),mandatory:(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{class:"badge badge--danger",children:"NO"})})}],h=({data:e})=>{const n={b:"b",td:"td",tr:"tr",...(0,s.R)()};return(0,t.jsx)(a.Fragment,{children:e.map(((e,r)=>(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.b,{children:e.property})}),(0,t.jsx)(n.td,{children:e.description}),(0,t.jsx)(n.td,{children:e.default}),(0,t.jsx)(n.td,{children:e.mandatory})]},r)))})},g=[{value:"SAD format",id:"sad-format",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"internal-sad-provider",children:"Internal SAD Provider"}),"\n",(0,t.jsx)(n.p,{children:"The implementation class of the Internal SAD Provider is:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"com.czertainly.signserver.module.entrustsam.sad.InternalSAMSadProvider\n"})}),"\n",(0,t.jsx)(n.p,{children:"The following properties can be configured for the Internal SAD Provider:"}),"\n","\n","\n",(0,t.jsxs)("table",{children:[(0,t.jsx)("th",{children:"Property"}),(0,t.jsx)("th",{children:"Description"}),(0,t.jsx)("th",{children:"Default Value"}),(0,t.jsx)("th",{children:"Mandatory"}),(0,t.jsx)("tbody",{children:(0,t.jsx)(h,{data:l})})]}),"\n",(0,t.jsx)(n.h2,{id:"sad-format",children:"SAD format"}),"\n",(0,t.jsx)(n.p,{children:"The signed SAD is a JSON Web Token (JWT) with the following structure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'HEADER\n{\n  "kid": "SAD_PROVIDER_KEYSTORE_ALIAS",\n  "typ": "JWT",\n  "alg": "SAD_PROVIDER_SIGNING_ALGORITHM"\n}\n\nPAYLOAD\n{\n  "iss": "SAD_PROVIDER_KEYSTORE_ALIAS",\n  "loa": "SAD_PROVIDER_LOA",\n  "sub": "userId",\n  "iat": 1715427718,\n  "signing_key_id": "keyId",\n  "dtbs_summary": {\n    "value": "psuqzDWVpDsqajRMfmfD12isY8foSCHWy7tCddM1z0w=",\n    "hashing_algorithm": "sha256"\n  }\n}\n'})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>d});var t=r(96540);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);